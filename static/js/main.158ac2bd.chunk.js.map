{"version":3,"sources":["Components/NavBar.js","Components/AddTask.js","Components/Task.js","Components/TodoItems.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","href","AddTask","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","shown","task","disabled","toggle","bind","assertThisInitialized","handleTask","handleClick","setState","e","console","log","target","value","addItem","props","undefined","_this2","onChange","type","placeholder","onClick","style","marginTop","marginLeft","display","uk-icon","Component","Task","name","item","complete","completed","handleComplete","handleDelete","delete","color","textDecorationLine","deleteItem","index","TodoItems","todoTasks","tasks","listItems","map","Task_Task","key","db","Tasks","App","preventDefault","newItem","items","concat","toConsumableArray","copy","splice","Components_NavBar","dist_default","format","marginBottom","TodoItems_TodoItems","Components_AddTask","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.158ac2bd.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../App.css\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <nav className=\"uk-navbar-container uk-margin uk-navbar\">\r\n        <div className=\"uk-navbar-center\">\r\n            <div className=\"uk-navbar-center-left\"><div>\r\n                <ul className=\"uk-navbar-nav\">\r\n                    <li>\r\n                        <a href=\"/\" className=\"isDisabled\">Pr칩ximamente</a>\r\n                    </li>\r\n                </ul>\r\n            </div></div>\r\n            <a className=\"uk-navbar-item uk-logo\" href=\"/\">ToDo</a>\r\n            <div className=\"uk-navbar-center-right\"><div>\r\n                <ul className=\"uk-navbar-nav\">\r\n                    <li><a href=\"/\" className=\"isDisabled\">Pr칩ximamente</a></li>\r\n                </ul>\r\n            </div></div>\r\n        </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React, {Component} from 'react';\r\n\r\nclass AddTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      shown: false,\r\n      task: \"\",\r\n      disabled: true\r\n    }\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.handleTask = this.handleTask.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  toggle(){\r\n    this.setState({\r\n      shown: !this.state.shown  \r\n    })\r\n  }\r\n\r\n  handleTask(e){\r\n    console.log(\"start\" + this.state.task);\r\n    if(e.target.value !== \"\"){\r\n      this.setState({\r\n        task: e.target.value,\r\n        disabled: false\r\n      })\r\n    }else{\r\n      this.setState({\r\n        disabled: true\r\n      })\r\n    }\r\n    console.log(\"End\" + this.state.task);\r\n  }\r\n\r\n  handleClick(e){\r\n    const addItem = this.props.addItem;\r\n    if(this.state.task !== undefined){\r\n      addItem(e,this.state.task);\r\n      this.setState({\r\n        task: \"\",\r\n        disabled: true\r\n      })\r\n      this.toggle();\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n    const shown = this.state.shown;\r\n    \r\n    return (\r\n      <div>\r\n        {shown ? \r\n        (\r\n          <div>\r\n            <form>\r\n              <div className=\"uk-margin\">\r\n                <div className=\"uk-form-controls\">\r\n                  <input onChange={(e) => this.handleTask(e)} className=\"uk-input\" type=\"text\" placeholder=\"p. ej. Hacer la tarea\"/>\r\n                </div>\r\n                <button disabled={this.state.disabled} className=\"uk-button uk-button-primary\" onClick={(e) => this.handleClick(e)}\r\n                style={{marginTop: '8px'}}>\r\n                  A침adir\r\n                </button>\r\n                <button className=\"uk-button uk-button-text\" onClick={this.toggle}\r\n                style={{marginTop: '8px', marginLeft: '8px'}}>\r\n                  Cancelar\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )\r\n        :\r\n        (\r\n          <div style={{display: \"inline\"}}>\r\n            <button className=\"uk-button uk-button-text\" onClick={this.toggle}>\r\n              <span className=\"uk-margin-small-right\" uk-icon=\"plus\">\r\n              </span><span>A침adir tarea</span>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>      \r\n    )\r\n  }\r\n}\r\n\r\nexport default AddTask\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Task extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: props.item.name,\r\n            complete: props.item.completed,\r\n        }\r\n\r\n        this.handleComplete = this.handleComplete.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleComplete(){\r\n        this.setState({\r\n            complete: !this.state.complete\r\n        })\r\n    }\r\n\r\n    handleDelete(e){\r\n        this.props.delete(this.state.name);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    <button className=\"uk-icon uk-inline\" onClick={this.handleComplete}>\r\n                        {this.state.complete ? \r\n                            (\r\n                                <span className=\"uk-icon\" uk-icon=\"bolt\" style={{color:\"green\"}} ></span>\r\n                            ) :\r\n                            (\r\n                                <span className=\"uk-icon\" uk-icon=\"bolt\"></span>\r\n                            )\r\n                        }\r\n                    </button>\r\n                </td>\r\n                <td>\r\n                    {this.state.complete ? \r\n                        (\r\n                            <p style={{textDecorationLine:\"line-through\"}}>{this.state.name}</p>\r\n                        ):\r\n                        (   \r\n                            <p>{this.state.name}</p>\r\n                        )\r\n                    }\r\n                </td>\r\n                <td>\r\n                    <button className=\"uk-icon\" uk-icon=\"trash\" style={{color:\"red\"}} onClick={(e) => this.props.deleteItem(this.props.index)}>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Task from './Task';\r\n\r\nexport default class TodoItems extends Component {\r\n    createTask(item, handleDelete){\r\n        console.log(item);\r\n        \r\n    }\r\n  \r\n    render() {\r\n        const todoTasks = this.props.tasks;\r\n        const deleteItem = this.props.deleteItem;\r\n        const listItems = todoTasks.map(function(e,index){\r\n            return <Task key={index} index={index} item={e} deleteItem={deleteItem}/>\r\n        });\r\n        return (\r\n        <div className=\"\">\r\n            <p className=\"uk-text-danger\">Tareas</p>\r\n            <table className=\"uk-table\">\r\n                <tbody>\r\n                    {listItems}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport Moment from 'react-moment';\nimport 'moment-timezone'; \n\nimport NavBar from './Components/NavBar';\nimport AddTask from './Components/AddTask';\nimport TodoItems from './Components/TodoItems';\n\n\nimport './App.css';\n\nconst db = {\n    \"Tasks\": [\n        {\n            \"name\": \"Hacer la tarea\",\n            \"completed\": false\n        },\n        {\n            \"name\": \"Comprar leche\",\n            \"completed\": false\n        },\n        {\n            \"name\": \"Comprar comida\",\n            \"completed\": false\n        }\n    ]\n}\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            tasks: []\n        }\n\n        this.deleteItem = this.deleteItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n    }\n\n    componentDidMount(){\n        this.setState({\n            tasks: db.Tasks\n        })\n    }\n\n    addItem = (e,item) => {\n        e.preventDefault();\n\n        const newItem = {\n            \"name\": item,\n            \"completed\": false\n        }\n\n        console.log(newItem);\n        const items = [...this.state.tasks, newItem];\n        this.setState({\n            tasks: items\n        })\n\n    }\n\n    deleteItem = key => {\n        console.log(\"Delete: \" + key);\n        \n        const copy = this.state.tasks;\n        copy.splice(key,0);\n        this.setState({\n          tasks: copy\n        })\n        console.log(\"State Delete: \" + this.state.tasks);\n    }\n\n    render() {\n    return (\n      <div className=\"App\">\n        <NavBar/>\n        <div className=\"uk-section\">\n          <div className=\"uk-container\">\n\n              <h3>El d칤a de hoy</h3>\n\n              <div className=\"uk-grid-match uk-child-width-1-4@m uk-grid\">\n                <div>\n                    <div className=\"uk-width-1-2@s uk-width-2-5@m\">\n                        <ul className=\"uk-nav uk-nav-default\">\n                            <li className=\"uk-active\"><p>Hoy</p></li>\n                            <li><p className=\"isDisabled\">Ma침ana</p></li>\n                            <li><p className=\"isDisabled\">Siguiente Semana</p></li>\n                        </ul>\n                    </div>\n                </div>\n                <div>\n                    <Moment format=\"MMM Do YY\" style={{marginBottom: '8px'}}></Moment>\n                    <TodoItems tasks={this.state.tasks} deleteItem={this.deleteItem}/>\n                    <AddTask addItem={this.addItem}/>\n                </div>\n              </div>\n\n          </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}